@mixin attach-map-of-contrasting-colors(
  $contrasting-colors-map,
  $important: false
) {
  @each $color-name in $contrasting-colors-names {
    $value: map-get($contrasting-colors-map, $color-name);

    @if ($value) {
      $color: get-contrasting-color-css-custom-property($color-name);
      $h: get-contrasting-color-css-custom-property($color-name, h);
      $s: get-contrasting-color-css-custom-property($color-name, s);
      $l: get-contrasting-color-css-custom-property($color-name, l);

      $h-value: hue($value);
      $s-value: saturation($value);
      $l-value: lightness($value);

      @if ($important) {
        #{$h}: $h-value !important;
        #{$s}: $s-value !important;
        #{$l}: $l-value !important;
        #{$color}: $value !important;
      } @else {
        #{$h}: $h-value;
        #{$s}: $s-value;
        #{$l}: $l-value;
        #{$color}: $value;
      }
    } @else {
      @error "-> #{$color-name} does not exist in contrasting-color-css-custom-properties-values map";
    }
  }
}

@mixin inherit-contrasting-colors {
  @each $color-name in $contrasting-colors-names {
    $color: get-contrasting-color-css-custom-property($color-name);
    $h: get-contrasting-color-css-custom-property($color-name, h);
    $s: get-contrasting-color-css-custom-property($color-name, s);
    $l: get-contrasting-color-css-custom-property($color-name, l);

    #{$h}: inherit;
    #{$s}: inherit;
    #{$l}: inherit;
    #{$color}: inherit;
  }
}

@mixin with-contrasting-colors-and-no-styling($fill, $force: false) {
  $opacity: opacity($fill);

  @if ($opacity > 0.4 or $force) {
    $fill-is-dark: is-color-dark($fill);

    @if ($fill-is-dark) {
      @include attach-map-of-contrasting-colors($light-contrasting-colors);
    } @else {
      @include attach-map-of-contrasting-colors($dark-contrasting-colors);
    }
  } @else {
    @include inherit-contrasting-colors;
  }
}

@mixin with-contrasting-colors($fill, $force: false) {
  @include with-contrasting-colors-and-no-styling($fill, $force);

  /*
    Spot style conflicts early,
    by always having 'color' set even when the contrasting colors haven't changed
  */
  color: get-contrasting-color('body');
}
